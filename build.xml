<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="checkstyle" name="build_war_game">
    <!--The dir to build the workspace-->
    <property name="war.file.name" value="dc2.war"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.class.dir" value="${build.dir}/classes"/>
    <property name="build.resource.dir" value="${build.dir}/resources"/>
    <property name="build.javadoc" value="${build.dir}/javadoc"/>


    <property name="config.folder" value="${config.name}"/>

    <property name="war.file.dir" value="${build.dir}/war"/>
    <property name="war.file.fullname" value="${war.file.dir}/${war.file.name}"/>
    <!--The source code dir-->
    <property name="src.dir" value="${basedir}/src"/>
    <!--The library dir of this project-->
    <property name="war.lib.path" value="${basedir}/WebRoot/WEB-INF/lib"/>

    <!--The path of findBug-->
    <property name="findbugs.home" value="${basedir}/findBug"/>

    <!--The path of checkStyle-->
    <property name="checkstyle.dir" value="${basedir}/checkstyle"/>
    <taskdef resource="checkstyletask.properties" classpath="${checkstyle.dir}/checkstyle-5.7-all.jar"/>


    <!--Set the level to build-->
    <property name="target.level" value="1.6"/>
    <property name="source.level" value="1.6"/>

    <!--The classpath of this project -->
    <path id="war.lib.classpath">
        <fileset dir="${war.lib.path}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${basedir}/buildlib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="findbugs.path">
        <fileset dir="${basedir}/findBug">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.path"/>

    <!--Clean the temporary files and prepare for new build-->
    <target name="init" description="Clean build temp dir before build!">

        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.class.dir}"/>
        <mkdir dir="${war.file.dir}"/>
        <mkdir dir="${build.resource.dir}"/>
        <mkdir dir="${build.javadoc}"/>

    </target>

    <target name="compile" description="compile the project" depends="init">
        <javac srcdir="${src.dir}" fork="true" encoding="UTF-8" target="${target.level}" debug="true"
               debuglevel="lines,vars,source"
               source="${source.level}"
               destdir="${build.class.dir}" classpathref="war.lib.classpath">
            <compilerarg line="-Xlint:deprecation -Xlint:unchecked"/>
            <!--<compilerarg value="-Xlint:unchecked"/>-->
        </javac>
        <copy todir="${build.resource.dir}">
            <fileset dir="${basedir}/WebRoot">
                <include name="**/*"/>
            </fileset>
        </copy>

        <copy todir="${build.class.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>

        <copy todir="${build.class.dir}" overwrite="true">
            <fileset dir="${basedir}/${config.folder}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>

    </target>

    <target name="war" description="pcakge the project" depends="compile">
        <war warfile="${war.file.fullname}" webxml="${build.resource.dir}/WEB-INF/web.xml" duplicate="preserve"  >
            <lib dir="${war.lib.path}">
                <include name="**"/>
            </lib>
            <classes dir="${build.class.dir}"/>
            <fileset dir="${build.resource.dir}"/>
        </war>
    </target>

    <target name="clean" description="clean the prjoect">
        <delete dir="${build.dir}"/>
        <delete dir="${build.class.dir}"/>
        <delete dir="${war.file.dir}"/>
        <delete dir="${build.resource.dir}"/>
    </target>


    <target name="javadoc" depends="war">

        <javadoc destdir="${build.javadoc}" windowtitle="Library" use="yes" linksource="no" splitindex="yes"
                 encoding="UTF-8" charset="UTF-8"
                 docencoding="UTF-8">
            <classpath refid="war.lib.classpath"/>
            <packageset dir="${src.dir}" defaultexcludes="yes">
                <include name="**"/>
            </packageset>

        </javadoc>

    </target>


    <target name="findbugs" depends="javadoc">
        <findbugs home="${findbugs.home}" output="xml:withMessages" outputFile="findbugs.xml">
            <!--  以上定义findbugs查找的类路径  -->
            <auxClasspath path="${findbugs.home}/lib/findbugs-ant.jar"/>
            <auxClasspath>
                <fileset dir="${findbugs.home}/lib" includes="*.jar"/>
            </auxClasspath>
            <sourcePath path="${src.dir}"/>
            <class location="${build.class.dir}"/>
        </findbugs>
    </target>


    <target name="checkstyle" depends="findbugs" description="Generates a report of code convention violations.">
        <checkstyle
                config="${checkstyle.dir}/checkstyle_checks.xml" failOnViolation="false">
            <fileset dir="${src.dir}" includes="**/*.java" excludes="**/*Test.java" />
            <formatter type="xml" toFile="${build.class.dir}/checkstyle-result.xml"/>
        </checkstyle>

        <style in="${build.class.dir}/checkstyle-result.xml" out="${build.class.dir}/checkstyle_report.html"
               style="${checkstyle.dir}/contrib/checkstyle-frames-errors.xsl"/>

    </target>


</project>